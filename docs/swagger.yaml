definitions:
  common.Error400Response:
    properties:
      error:
        example: Bad request
        type: string
    type: object
  common.Error401Response:
    properties:
      error:
        example: Unauthorized
        type: string
    type: object
  common.Error404Response:
    properties:
      error:
        example: Resource not found
        type: string
    type: object
  common.Error500Response:
    properties:
      error:
        example: Internal server error
        type: string
    type: object
  common.ErrorResponse:
    properties:
      error:
        example: Unauthorized
        type: string
    type: object
  requests.LoginUserRequestDto:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  requests.RegisterUserRequestDto:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
  responses.AuthMeResponseDto:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      role:
        type: string
    type: object
  responses.LoginUserResponseDto:
    properties:
      accessToken:
        type: string
    type: object
  responses.UserResponseDto:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample API with JWT auth.
  title: Fiber API
  version: "1.0"
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Login user with email and password
      parameters:
      - description: User credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/requests.LoginUserRequestDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.LoginUserResponseDto'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Authenticate user
      tags:
      - auth
  /api/auth/me:
    get:
      description: Get authenticated user's information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.AuthMeResponseDto'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.Error401Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/common.Error500Response'
      security:
      - BearerAuth: []
      summary: Get current user
      tags:
      - auth
  /api/health:
    get:
      description: Returns app and DB status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Health check
      tags:
      - health
  /api/users:
    get:
      description: Returns list of users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.UserResponseDto'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get all users
      tags:
      - Users
  /api/users/{id}:
    get:
      description: Returns a single user based on their UUID
      parameters:
      - description: User ID (UUID format)
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UserResponseDto'
        "400":
          description: Invalid UUID format
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.ErrorResponse'
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get a user by ID
      tags:
      - Users
  /api/users/by-email:
    get:
      description: Returns a single user based on their email
      parameters:
      - description: User email
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UserResponseDto'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/common.Error400Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.Error401Response'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/common.Error404Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/common.Error500Response'
      security:
      - BearerAuth: []
      summary: Get a user by email
      tags:
      - Users
  /api/users/register:
    post:
      consumes:
      - application/json
      description: Creates a user with name, email, and password
      parameters:
      - description: User registration payload
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/requests.RegisterUserRequestDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.UserResponseDto'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - Users
securityDefinitions:
  BearerAuth:
    description: 'Enter: "Bearer <your JWT token>"'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
